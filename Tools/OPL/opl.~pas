unit opl;

interface
uses Dialogs,Classes, SysUtils;

type FOPLHeader = record
         Crap: array[0..34] of char;
         ItemCount: LongWord;
        end;

 type FOPL = packed record
   plength: longword;
   gbpath: string;
    position_x : Single;
    position_y : Single;
    position_z : Single;
     rotation_x : Single;
     rotation_y : Single;
     rotation_z : Single;
     rotation_w : Single;
      scale_x : real;
      scale_y : real;
      scale_z : real;
    end;

    type TOpl = class
      private
        F: File;
        OPLHeader : FOplHeader;

      public
        Filename: String;
        ItemCount: Integer;
        OplArray: array of FOpl;

        procedure Open;

    end;

implementation


procedure TOPL.Open;
var i: integer;
begin
{$I-}
AssignFile(F,Filename);
 Reset(F,1);
 {****READING HEADER****}
 BlockRead(F,OPLHeader,SizeOf(OPLHeader));
 ItemCount:=OPLHeader.ItemCount;

 {****READING LIST****}
 SetLength(OPLArray,ItemCount);
 Seek(F,40);

 for i:=0 to 0 do
  begin
   //GET PATH LENGTH
    BlockRead(F,OPLArray[i].plength, sizeof(OPLArray[i].plength));

   //GET PATH
   SetLength(OPLArray[i].gbpath,OPLArray[i].plength);
   BlockRead(F,OPLArray[i].gbpath, 32);
  end;

CloseFile(F);
end;


end.
